// Objective-C API for talking to github.com/kinfkong/ikatago-client/ikatagosdk Go package.
//   gobind -lang=objc github.com/kinfkong/ikatago-client/ikatagosdk
//
// File is generated by gobind. Do not edit.

#ifndef __Ikatagosdk_H__
#define __Ikatagosdk_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class IkatagosdkClient;
@class IkatagosdkKatagoRunner;
@protocol IkatagosdkDataCallback;
@class IkatagosdkDataCallback;

@protocol IkatagosdkDataCallback <NSObject>
- (void)callback:(NSData* _Nullable)content;
- (void)onReady;
- (void)stderrCallback:(NSData* _Nullable)content;
@end

/**
 * Client the client wrapper
 */
@interface IkatagosdkClient : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewClient creates the new mobile client
 */
- (nullable instancetype)init:(NSString* _Nullable)world platform:(NSString* _Nullable)platform username:(NSString* _Nullable)username password:(NSString* _Nullable)password;
/**
 * CreateKatagoRunner creates  the katago runner
 */
- (IkatagosdkKatagoRunner* _Nullable)createKatagoRunner:(NSError* _Nullable* _Nullable)error;
/**
 * QueryServer queries the server info
 */
- (NSString* _Nonnull)queryServer:(NSError* _Nullable* _Nullable)error;
- (void)setEngineType:(NSString* _Nullable)engineType;
@end

/**
 * KatagoRunner represents katago runner
 */
@interface IkatagosdkKatagoRunner : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * DisableCompress disables the compression
 */
- (void)disableCompress:(BOOL)noCompress;
/**
 * Run runs the katago
 */
- (BOOL)run:(id<IkatagosdkDataCallback> _Nullable)callback error:(NSError* _Nullable* _Nullable)error;
/**
 * SendGTPCommand sends the gtp command
 */
- (BOOL)sendGTPCommand:(NSString* _Nullable)command error:(NSError* _Nullable* _Nullable)error;
/**
 * SetEngineType sets the engineType. for example: 'katago', 'gomoku'
 */
- (void)setEngineType:(NSString* _Nullable)engineType;
/**
 * SetGpuType sets the transmit move num
 */
- (void)setGpuType:(NSString* _Nullable)gpuType;
/**
 * SetKataConfig sets the name of the kata config name
 */
- (void)setKataConfig:(NSString* _Nullable)kataConfig;
/**
 * SetKataLocalConfig sets the name of the kata local config file
 */
- (void)setKataLocalConfig:(NSString* _Nullable)kataLocalConfig;
/**
 * SetKataName sets the name of the katago name
 */
- (void)setKataName:(NSString* _Nullable)kataName;
/**
 * SetKataOverrideConfig sets the name of the kata override-config option of kata, example: analysisPVLen=30,playoutDoublingAdvantage=3
 */
- (void)setKataOverrideConfig:(NSString* _Nullable)kataOverrideConfig;
/**
 * SetKataWeight sets the name of the kata weight
 */
- (void)setKataWeight:(NSString* _Nullable)kataWeight;
/**
 * SetRefreshInterval sets the refresh interval
 */
- (void)setRefreshInterval:(long)refreshInterval;
/**
 * SetSubCommands sets the subcommands. for example: 'analysis -analysis-threads 12'
 */
- (void)setSubCommands:(NSString* _Nullable)subCommands;
/**
 * SetToken sets the token
 */
- (void)setToken:(NSString* _Nullable)token;
/**
 * SetTransmitMoveNum sets the transmit move num
 */
- (void)setTransmitMoveNum:(long)transmitMoveNum;
/**
 * SetUseRawData sets if use the raw data or not
 */
- (void)setUseRawData:(BOOL)useRawData;
/**
 * Stop stops the katago engine
 */
- (BOOL)stop:(NSError* _Nullable* _Nullable)error;
@end

/**
 * NewClient creates the new mobile client
 */
FOUNDATION_EXPORT IkatagosdkClient* _Nullable IkatagosdkNewClient(NSString* _Nullable world, NSString* _Nullable platform, NSString* _Nullable username, NSString* _Nullable password, NSError* _Nullable* _Nullable error);

@class IkatagosdkDataCallback;

/**
 * DataCallback defines the data callback
 */
@interface IkatagosdkDataCallback : NSObject <goSeqRefInterface, IkatagosdkDataCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)callback:(NSData* _Nullable)content;
- (void)onReady;
- (void)stderrCallback:(NSData* _Nullable)content;
@end

#endif
